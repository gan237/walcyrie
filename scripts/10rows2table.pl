use strict;
use warnings;

#automata for log file processing..

# expects as input a file ($fname.4rows) generated by grep -E "^Real|^maximum resident|^VERIFICATION \./|VERIFICATION SUCC|VERIFICATION FAIL" <log_file> >  $fname.4rows

#
my $count=0;
#my @restart = ();
#my @conflict = ();
#my @decision = ();
#my @propagation = ();
#my @conflict_lit = ();
#my $sat = undef;

my @line = ();
my $a = undef;
my @b = undef;
my $print_name = undef;

print "#restarts conflicts  decisions  propagations  conflict-literals outcome  name\n";
while(1){
  $line[0] = <>;
  $line[1] = <>;
  $line[2] = <>;
  $line[3] = <>;
  $line[4] = <>;
  $line[5] = <>;

  #print $line[0];

  if ($line[0] =~ /^restarts/){

      (undef, $a) = split ':', $line[0];
      printf "%d ", $a;

      (undef, $a) = split ':', $line[1];
      printf "%d ", $a;

      @b = split ' ', $line[2];
      printf "%d ", $b[2];

      (undef, $a) = split ':', $line[3];
      printf "%d ", $a;

      @b = split ' ', $line[4];
      printf "%d ", $b[3];

      if ($line[5] =~ /UNSATISFIABLE/){
        printf "%s ", "UNSAT";
      }else{
        printf "%s ", "SAT";
      }
      $print_name = 1;
  }

  if ($line[0] =~ /^VERIFICATION \.\// && defined $print_name){
    (undef, $a) = split ' ', $line[0];
    printf "%s\n", $a;
    $print_name = undef;
  }
  exit if ($line[5] =~ /cpu family/);
}

#end
