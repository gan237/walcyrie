#!/bin/bash
#
# Copyright (c) 2011 Michael Tautschnig <michael.tautschnig@comlab.ox.ac.uk>
# Daniel Kroening
# Computing Laboratory, Oxford University
# 
# All rights reserved. Redistribution and use in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions are met:
# 
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
# 
#   2. Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
# 
#   3. All advertising materials mentioning features or use of this software
#      must display the following acknowledgement:
# 
#      This product includes software developed by Daniel Kroening,
#      Edmund Clarke, Computer Systems Institute, ETH Zurich
#      Computer Science Department, Carnegie Mellon University
# 
#   4. Neither the name of the University nor the names of its contributors
#      may be used to endorse or promote products derived from this software
#      without specific prior written permission.
# 
#    
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS `AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# main CPROVER benchmarking framework script

set -e

die() {
  echo $1
  exit 1
}

usage() {
  cat <<EOF
Usage: $SELF [COMMAND] [OPTIONS]
  Execute CPROVER benchmarking command COMMAND. Use $SELF help to display the
  list of available commands and $SELF COMMAND --help to list command-specific
  options.  

EOF
}

show_help() {
  usage
  cat <<EOF
  
  Available commands:
  help|--help     display this help text
  --version       display current version
  home            print the path where cpbm scripts reside

  unpack          unpack a CPROVER benchmark package
  update          update a CPROVER benchmark package
  init            create a CPROVER benchmark package
  run             run a verification tool on a given benchmark and obtain logs
  cillify         run C sources through Cil
  list-claims     list all claims in a benchmark
  csv             produce a CSV table from benchmark runs
  table           produce a LaTeX table from CSV
  graph           scatter, cactus, or bar charts of run times
  snd-graph       stacked bar or pie charts depicting soundness of tools
  web             generate HTML table and collect log files for web publication
  jtl             generate JMeter XML summary from CSV
EOF
}

SELF=$0
SCRIPT_HOME=`dirname $0`
CMD=$1

if [ $# -lt 1 ] ; then
  usage
  exit 1
fi

shift
case "$CMD" in 
  help|--help) show_help;;
  --version) cat $SCRIPT_HOME/VERSION;;
  home) echo $SCRIPT_HOME;;
  unpack) $SCRIPT_HOME/unpack.sh "$@";;
  update) $SCRIPT_HOME/update.sh "$@";;
  init) $SCRIPT_HOME/update.sh --init "$@";;
  run) $SCRIPT_HOME/verify.sh "$@";;
  cillify) $SCRIPT_HOME/cil_wrapper.sh "$@";;
  list-claims) $SCRIPT_HOME/list_claims.sh "$@";;
  csv) $SCRIPT_HOME/make_csv.pl "$@";;
  table) $SCRIPT_HOME/make_table.pl "$@";;
  graph) $SCRIPT_HOME/make_graph.pl "$@";;
  snd-graph) $SCRIPT_HOME/make_piechart.pl "$@";;
  web) $SCRIPT_HOME/make_web.pl "$@";; 
  jtl) $SCRIPT_HOME/make_jtl.pl "$@";; 
  *) die "Unknown command $CMD" ;;
esac

exit 0

